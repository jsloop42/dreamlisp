#!/bin/bash

bin="JSLTests/objc"
buildlog="build.log"
proj="JSL.xcodeproj"
scheme="JSLAll"
config="Release"
#config="Debug"
corelib="core.jsl"
jslshell="dlisp"
jslfrwrk="JSL.framework"
jslfrwrkdsym="JSL.framework.dSYM"
rpath="/Users/jsloop/Library/Frameworks"
bin="/Users/jsloop/bin"

function help() {
    echo "Build requires step as argument"
    echo "Usage: $0 step"
    exit
}

# Display a progress bar
function spinner() {
    local spin='-\|/'
    local pid=$!
    local delay=0.2
    while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do
        i=$(( (i+1) %4 ))
        printf "\r${spin:$i:1} "
        ((count++))
        seq  -f "." -s '' $count
        sleep $delay
    done
    echo ""
}

function buildproj() {
    xcodebuild -scheme $scheme -configuration $config build > $buildlog 2>&1
    # xcodebuild -scheme $scheme -configuration $config build 2>&1 | tee $buildlog
}

function clean() {
    xcodebuild clean -project $proj -scheme $scheme > /dev/null
}

function build() {
    clean
    buildproj
	if [[ $(tail -6 build.log | head -1) == *"BUILD FAILED"* ]]; then
		cat $buildlog
		exit -1
	fi
    dir=$( tail -4 $buildlog | head -1 | rev | cut -d " " -f1 | cut -d "/" -f2- | rev)
    cp $dir/$jslshell $bin
    rsync -aq $dir/$jslfrwrk $rpath
    rsync -aq $dir/$jslfrwrkdsym $rpath
}

(build $@) & spinner
